package egovframework.example.sample.web;
/* 시스템 import */
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
/* 파일 import */
import egovframework.example.sample.service.DeptVo;


@Controller
public class DeptController {
	// 어노테이션
	// deptWrite 화면 출력하는 주소 맵핑
	@RequestMapping(value = "/deptWrite.do")
	public String deptWrite() {
		return "dept/deptWrite";
	}
	
	// deptWrite 화면에서의 데이터를 받아와서 출력하는 메소드 세팅
	@RequestMapping(value = "/deptWriteSave.do")
	public String deptWriteSave(DeptVo vo) {
		// 전달된 데이터를 출력하기
		System.out.println("부서번호 : " + vo.getDeptno());
		System.out.println("부서이름 : " + vo.getDname());
		System.out.println("부서위치 : " + vo.getLoc());
		
		return "";
	}
	
	/*
	 * MVC 패턴 : 개발 할때 3가지 형태로 역할을 나누어 개발하는 방법론이다.
	 * MVC 는 Model, view, controller 이다.
	 * 전자정부 프레임워크는 MVC 기본 구조를 갖추고 있다.
	 * 
	 * <컴포넌트 소개>
	 * (1) Model
	 *  - Controller 의 다음 구조로 애플리케이션의 정보, 즉 데이터 흐름을 담당하는 구조를 말한다.
	 *  - Service 파일, Impl 파일 , DAO 파일이 Model 에 해당된다.
	 *  
	 * (2) View
	 *  - 화면 구성 파일인 JSP File 이 view  에 해당 된다.
	 *  
	 * (3) Controller
	 *  - Web 주소를 기록한다.
	 *  - 흐름제어 역할을 하고, 비지니스로직과 모델의 상호 동작의 조정 역할을 한다.
	 *  - 웹 주소 등을 기록하는 Controller.java 파일이 Controller에 해당한다.
	 *  
	 * (4) 장점
	 *  - 사용자 인터페이스와 비지니스로직(데이터저장, 삭제 등)을 분리하여 웹 개발하는 것이 장점이다.
	 *  - 즉 JSP 의 개발 구조처럼 JSP 파일안에 화면의 요소와 SQL을 같이 넣고 개발하는 것이 아니고 
	 *    철저히 분해 해서 개발하는 장점이 있다.
	 *  
	 * Annotation
	 * 어노테이션 이란?
	 * - 스프링 구조에서 무언가 선언을 할 때 사용된다.(즉 기능에 대한 인식용으로 사용됨)
	 * - 주석이라는 말이지만 개발자가 사용하는 것이 아닌 시스템에서 인식하는 주석으로 사용된다.
	 * 
	 * 종류
	 *  @Controller
	 *  * 컨트롤러 선언을 담당한다.
	 *  * 스프링 구조의 클래스의 컨트롤로 선언을 할 때 윗쪽에 배치 시킨다.
	 *  
	 *  @RequestMapping
	 *  - 웹 주소의 선언을 담당한다.
	 *  - 웹에서 요청한 주소를 인식하고 실행관련 메소드를 연결한다.
	 *  
	 *  @Resourse
	 *  - 의존관계를 자동 설정 할 때 사용하며 이름을 이용하여 의존하는 객체를 선언한다.
	 *  
	 *  @Service
	 *  - 
	 * */
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
